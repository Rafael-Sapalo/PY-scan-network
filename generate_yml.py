import yaml as yml
import socket as sck


def get_subnet():
    """
     @brief Get subnet for local machine. This is used to determine the ip range of the local machine
     @return string of the form 192. 168. 0
    """
    local_ip = sck.gethostbyname(sck.gethostname())
    local_network = '.'.join(local_ip.split('.')[:-1])
    ip_range = local_network + ".0/24"
    return ip_range


subnet = get_subnet()

print(subnet)


def generate_yml(subnet):
    """
     @brief Generate the docker - compose. yml file. This file is used to configure the network.
     @param subnet The subnet to use for the config file. This can be a string or a list
    """
    config = {
        'version': '3',
        '#file generated by generate_yml.py': None,
        'services': {
            'web': {
                'build': {'context': '.'},
                'networks': ['mynetwork'],  # Remove the 'ipv4_address' line
                'ports': ["5000:80"]
            }
        },
        'networks': {
            'mynetwork': {
                'driver': 'bridge',
                'ipam': {
                    'driver': 'default',
                    'config': [{'subnet': subnet}]
                }
            }
        }
    }
    with open('docker-compose.yml', 'w') as f:
        yml.dump(config, f, default_flow_style=False)


generate_yml(subnet)
